/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export function overwriteConfig(adminPort: number, keystoreConnectionUrl: string, bootstrapServerUrl: string | undefined | null, signalingServerUrl: string | undefined | null, configPath: string, allowedOrigin: string): string
export function defaultConductorConfig(adminPort: number, keystoreConnectionUrl: string, bootstrapServerUrl: string, signalingServerUrl: string, conductorEnvironmentPath: string, allowedOrigin: string): string
export function decodeHappOrWebhapp(happOrWebhappBytes: Array<number>): Promise<HappAndUiBytes>
export function readAndDecodeHappOrWebhapp(path: string): Promise<HappAndUiBytes>
export function saveWebhapp(path: string, uiTargetDir: string): Promise<string>
export interface ZomeCallUnsignedNapi {
  cellId: Array<Array<number>>
  zomeName: string
  fnName: string
  payload: Array<number>
  capSecret?: Array<number>
  provenance: Array<number>
  nonce: Array<number>
  expiresAt: number
}
export interface ZomeCallNapi {
  cellId: Array<Array<number>>
  zomeName: string
  fnName: string
  payload: Array<number>
  capSecret?: Array<number>
  provenance: Array<number>
  nonce: Array<number>
  expiresAt: number
  signature: Array<number>
}
export interface HappAndUiBytes {
  happBytes: Array<number>
  uiBytes?: Array<number>
}
export type JsLauncherLairClient = LauncherLairClient
export class LauncherLairClient {
  constructor()
  static connect(connectionUrl: string, passphrase: string): Promise<LauncherLairClient>
  signZomeCall(zomeCallUnsignedJs: ZomeCallUnsignedNapi): Promise<ZomeCallNapi>
  importSeedFromJsonFile(path: string, tagAppendix: string): Promise<void>
}
